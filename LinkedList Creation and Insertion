#include<iostream>
using namespace std;

struct node
{
    int data;
    node *next;
};
// Traversal 
void traverse(struct node* ptr)
{
	while(ptr!=NULL)
	{
		cout<<"Data of node: "<<ptr->data<<endl;
		cout<<"Address of node: "<<ptr->next<<endl;
		ptr=ptr->next;
	}
}
// Insert Node at start
struct node* insertAtFirst(node* first,int data)
{
	node* ptr;
	ptr=new node;
	ptr->next=first;
	ptr->data=data;
	return ptr;
}
// Insert Node between Nodes
struct node* insertBetween(node *first,int data,int index)
{
	node* ptr=new node;
	int i=0;
	node *p=first;
	
		ptr->data=data;
	
	while(i!=index-1)
	{
		p=p->next;
		i++;
	}

	ptr->next=p->next;
	p->next=ptr;
	return first;
}
// Insert Node at End
struct node* insertEnd(node*first,int data)
{
	node* ptr;
	ptr=new node;
	ptr->data=data;
	
	node *p=first;
	while(p->next!=NULL)
	{
		p=p->next;
	}
	p->next=ptr;
	ptr->next=NULL;
	return first;
	
	
}

int main()
{
	
    node *first,*second,*third,*head,*temp;
    head=NULL;
    first=new node;
    second=new node;
    third=new node;
    head=new node;
    head->next=first;



    //first node link with second

    first->data=20;
    first->next=second;

    //second node link with third

    second->data=45;
    second->next=third;

    //third node link with next

    third->data=60;
    third->next=NULL;

    traverse(head);

    first=insertAtFirst(first,10000);
    first=insertBetween(first,2000,2);
    first=insertEnd(first,100);
    
    cout<<"\n \n After inserting."<<endl;
    traverse(first);
}
